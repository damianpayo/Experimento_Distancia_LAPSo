limits = c('WW', 'LL', 'WL', 'LW'),
labels = c('Wide', 'Low', 'Wide-Low', 'Low-Wide'),
guide = guide_none()) +
scale_y_continuous(limits=c(0, 2.20)) +
scale_x_discrete(limits = c('WW', 'LL', 'WL', 'LW')) +
labs(title="Slopes per condition", y='Slopes', x='Condition')+
# WW- LW
annotate("text", x = 2.5, y = 2.18,  label = "***", size = 4) +
annotate("segment", x = 0.7, xend = 4.2, y = 1.8,
yend = 1.8, colour = "black", size=.2, alpha=1,) +
# LL - LW
annotate("text", x = 3, y = 2.08,  label = "***", size = 4) +
annotate("segment", x = 1.75, xend = 4.2, y = 1.7,
yend = 1.7, colour = "black", size=.2, alpha=1,) +
# WW- WL
annotate("text", x = 1.9, y = 1.98,  label = "***", size = 4) +
annotate("segment", x = 0.7, xend = 3.2, y = 1.6,
yend = 1.6, colour = "black", size=.2, alpha=1,) +
# LL - WL
annotate("text", x = 2.5, y = 1.88,  label = "***", size = 4) +
annotate("segment", x = 1.75, xend = 3.2, y = 1.5,
yend = 1.5, colour = "black", size=.2, alpha=1,) +
#WW - LL
annotate("text", x = 1.45, y = 1.78,  label = "***", size = 4) +
annotate("segment", x = 0.7, xend = 2.2, y = 1.76,
yend = 1.76, colour = "black", size=.2, alpha=1,) +
theme(axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9),
plot.title = element_text(size = 10, hjust = 0.5))
plt_1k_slope
#cols <- c("#505160", "#68829E", "#AEBD38", "#598234")
cols <- c("#2E2300", "#6E6702", "#C05805", "#DB9501")
plt_1k_slope <- ggplot(data_slopes_clean,
aes(x=condicion, y=slope, fill=condicion)) +
stat_boxplot(geom = "errorbar",
width = 0.25) +
geom_boxplot(alpha=0.8, outlier.colour=NA, width = 0.4)+
scale_fill_manual(values = cols,
limits = c('WW', 'LL', 'WL', 'LW'),
labels = c('Wide', 'Low', 'Wide-Low', 'Low-Wide'),
guide = guide_none()) +
scale_y_continuous(limits=c(0, 2.20)) +
scale_x_discrete(limits = c('WW', 'LL', 'WL', 'LW')) +
labs(title="Slopes per condition", y='Slopes', x='Condition')+
# WW- LW
annotate("text", x = 2.5, y = 2.18,  label = "***", size = 4) +
annotate("segment", x = 0.7, xend = 4.2, y = 2.16,
yend = 2.16, colour = "black", size=.2, alpha=1,) +
# LL - LW
annotate("text", x = 3, y = 2.08,  label = "***", size = 4) +
annotate("segment", x = 1.75, xend = 4.2, y = 2.06,
yend = 2.06, colour = "black", size=.2, alpha=1,) +
# WW- WL
annotate("text", x = 1.9, y = 1.98,  label = "***", size = 4) +
annotate("segment", x = 0.7, xend = 3.2, y = 1.96,
yend = 1.96, colour = "black", size=.2, alpha=1,) +
# LL - WL
annotate("text", x = 2.5, y = 1.88,  label = "***", size = 4) +
annotate("segment", x = 1.75, xend = 3.2, y = 1.86,
yend = 1.86, colour = "black", size=.2, alpha=1,) +
#WW - LL
annotate("text", x = 1.45, y = 1.78,  label = "***", size = 4) +
annotate("segment", x = 0.7, xend = 2.2, y = 1.76,
yend = 1.76, colour = "black", size=.2, alpha=1,) +
theme(axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9),
plot.title = element_text(size = 10, hjust = 0.5))
plt_1k_slope
#### Carga de Datos ####
# Coeficientes Completos
Dato_1 <- read_csv('./Indicadores/Centroide_Espectral.csv') %>%
pivot_longer(cols = c("wide", "low", "low-wide", "wide-low"),
names_to = "Condicion",
values_to = 'Centroide_Espectral')
Dato_2 <- read_csv('./Indicadores/DR_Ratio.csv')%>%
pivot_longer(cols = c("wide", "low", "low-wide", "wide-low"),
names_to = "Condicion",
values_to = 'DR_Ratio')
Dato_3 <- read_csv('./Indicadores/Intensidad_Binaural.csv') %>%
pivot_longer(cols = c("wide", "low", "low-wide", "wide-low"),
names_to = "Condicion",
values_to = 'Intensidad_Binaural')
Dato_4 <- read_csv('./Indicadores/Varianza_Espectral.csv') %>%
pivot_longer(cols = c("wide", "low", "low-wide", "wide-low"),
names_to = "Condicion",
values_to = 'Varianza_Espectral')
df_list <- list(Dato_1, Dato_2, Dato_3, Dato_4)
Indicadores <- df_list %>% reduce(merge, by=c('Distancia','Condicion'))
rm(Dato_1, Dato_2, Dato_3, Dato_4, df_list)
Indicadores$dist_log <- log10(Indicadores$Distancia)
View(Indicadores)
View(data_clean)
View(data_clean)
Indicadores <- rename(Indicadores,
Distancia = distancia,
Condicion = condicion)
Indicadores <- rename(Indicadores,
distancia = Distancia,
condicion = Condicion)
Indicadores$condicion[Indicadores$condicion=="wide"] <- "WW"
Indicadores$condicion[Indicadores$condicion=="low"] <- "LL"
Indicadores$condicion[Indicadores$condicion=="low-wide"] <- "LW"
Indicadores$condicion[Indicadores$condicion=="wide-low"] <- "WL"
data_clean <- merge(x=Indicadores,y=data_clean,
by=c("condicion","distancia"))
lmer.indicadores <- lmer(resp_log ~ dist_log * condicion *
Centroide_Espectral * DR_Ratio *
Intensidad_Binaural * Varianza_Espectral
+ (1|nsub),
data = data_clean)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
library(here)
library(ggplot2)
library(plotrix)
library(segmented)
library(Routliers)
library(tidyverse)
library(ggpubr)
library(car)
library(data.table)
library(lme4)
library(nlme)
library(emmeans)
library(sjstats)
library(lmerTest)
library(MuMIn)
library(nortest)
dir_1k_DR <- "./Data_1k_DR"
data_1k_DR <-
list.files(path=dir_1k_DR, pattern = "*.csv",full.names = TRUE) %>%
map_df(~fread(.) %>% mutate(trial_Order = row_number())) %>%
mutate(freq = "1k")
rm(dir_1k_DR)
# Corregimos la columna de condicion con una etiqueta mas legible
data_1k_DR$condicion[data_1k_DR$condicion==0] <- "WW"
data_1k_DR$condicion[data_1k_DR$condicion==1] <- "LL"
data_1k_DR$condicion[data_1k_DR$condicion==2] <- "LW"
data_1k_DR$condicion[data_1k_DR$condicion==3] <- "WL"
orden_bloques <- read.csv("./orden_bloques.csv")
data_1k_DR <- merge(x=orden_bloques,y=data_1k_DR,
by=c("nsub","condicion"))
# Erase redundant columns
data_1k_DR <- data_1k_DR[, !names(data_1k_DR) %in% c("bloque","altura")]
rm(orden_bloques)
data_1k_DR <- data_1k_DR[!(data_1k_DR$nsub %in% c(4,55,56,69)), ]
data_1k_DR$dist_log <- log10(data_1k_DR$distancia)
data_1k_DR$resp_log <- log10(data_1k_DR$respuesta)
data_clean <- tibble()
Nsubs <- unique(data_1k_DR$nsub)
Conds <- unique(data_1k_DR$condicion)
for (N in Nsubs){
for (C in Conds){
data_N <- data_1k_DR %>% filter(nsub==N, condicion==C)
outliers_N <- outliers_mcd(x = cbind(data_N$dist_log,data_N$resp_log), alpha = .01, h=0.75)
outliers_list <- outliers_N$outliers_val
# Eliminar outliers multivariados!
outliers_index <-  which(data_N$dist_log%in%outliers_list$X1 &
data_N$resp_log%in%outliers_list$X2)
if (length(outliers_index)!=0){
data_N <- data_N[-outliers_index, ]
}
data_clean <- rbind(data_clean,data_N)
}
}
rm(data_N,outliers_list,outliers_N,outliers_index,C,Conds,N,Nsubs)
data_slopes <- tibble()
sresids <- vector()
Nsubs <- unique(data_clean$nsub)
Conds <- unique(data_clean$condicion)
for (N in Nsubs){
for (C in Conds){
data_N <- data_clean %>% filter(nsub==N, condicion==C)
linear.model <- lm(resp_log~dist_log,data_N)
data_N$slope <- linear.model$coefficients[2]
data_N$intercept <- linear.model$coefficients[1]
data_N$res <- as.vector(rstandard(linear.model))
data_slopes <- rbind(data_slopes,data_N)
sresids <- append(sresids, as.vector(rstandard(linear.model)))
}
}
rm(data_N,C,Conds,N,Nsubs, linear.model)
data_clean <- data_slopes
data_slopes <- data_slopes %>%
summarise(nsub, condicion, orden_bloque, slope, intercept, freq) %>%
unique()
# Histogram & QQ Plot
hist(sresids, col='steelblue', main='Residues',xlab="Residues")
qqnorm(sresids, main='Normal')
qqline(sresids)
normality_test <- data_clean %>%
group_by(nsub, condicion) %>%
summarise(statistic = shapiro.test(res)$statistic,
p.value = shapiro.test(res)$p.value)
normality_test%>%subset(p.value<0.05)
## residuos ploteados en dos ejes, para poder ver la variabilidad por
## distancia por condicion por frecuencia.6 figuras en total
cols <- c("#455A64", "#90A4AE", "#CFD8DC",  "#676c6e")
ggplot(data_clean, aes(x = res, fill = condicion)) +
geom_histogram(binwidth = 0.2) +
scale_fill_manual(values = cols,
limits = c('WW', 'LL', 'WL', 'LW'),
labels = c('Wide', 'Low', 'Wide-Low', 'Low-Wide'),
guide = guide_none()) + # Para ocultar las etiquetas de la leyenda
labs(y = 'Count', x = "Residuals") +  # Para quitar las etiquetas del eje y
labs(title = 'Residuals by condition') +  # Para quitar el título de los gráficos facetados
facet_wrap(~condicion, labeller = "label_value") +
theme(axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9),
plot.title = element_text(size = 15, hjust = 0.5))
slope_1k_WW <- data_slopes %>% filter(condicion=="WW")
slope_1k_LL <- data_slopes %>% filter(condicion=="LL")
slope_1k_WL <- data_slopes %>% filter(condicion=="WL")
slope_1k_LW <- data_slopes %>% filter(condicion=="LW")
# 1k
outliers <-outliers_mad(slope_1k_WW$slope)
#outliers$limits[2]
slope_1k_WW<- slope_1k_WW[slope_1k_WW$slope<outliers$limits[2],]
outliers <-outliers_mad(slope_1k_LL$slope)
#outliers$limits[2]
slope_1k_LL<- slope_1k_LL[slope_1k_LL$slope<outliers$limits[2],]
outliers <-outliers_mad(slope_1k_WL$slope)
#outliers$limits[2]
slope_1k_WL<- slope_1k_WL[slope_1k_WL$slope<outliers$limits[2],]
outliers <-outliers_mad(slope_1k_LW$slope)
#outliers$limits[2]
slope_1k_LW<- slope_1k_LW[slope_1k_LW$slope<outliers$limits[2],]
data_slopes_clean <- (rbind(slope_1k_LL,slope_1k_WW,
slope_1k_LW,slope_1k_WL))
count_conditions <- data_slopes_clean %>%
group_by(nsub) %>%
summarise(n = n())
drops <- count_conditions %>% subset(n!=4)
data_slopes_clean <- data_slopes_clean[!(data_slopes_clean$nsub%in%
drops$nsub), ]
data_clean <- data_clean[!(data_clean$nsub%in%
drops$nsub), ]
rm(count_conditions, outliers)
rm(slope_1k_LL, slope_1k_WW, slope_1k_LW, slope_1k_WL)
normality_slopes <- data_slopes_clean %>%
group_by(freq, condicion) %>%
summarise(statistic = shapiro.test(slope)$statistic,
p.value = shapiro.test(slope)$p.value,
normality=(p.value>0.05))
normality_slopes
#cols <- c("#505160", "#68829E", "#AEBD38", "#598234")
cols <- c("#2E2300", "#6E6702", "#C05805", "#DB9501")
plt_1k_slope <- ggplot(data_slopes_clean,
aes(x=condicion, y=slope, fill=condicion)) +
stat_boxplot(geom = "errorbar",
width = 0.25) +
geom_boxplot(alpha=0.8, outlier.colour=NA, width = 0.4)+
scale_fill_manual(values = cols,
limits = c('WW', 'LL', 'WL', 'LW'),
labels = c('Wide', 'Low', 'Wide-Low', 'Low-Wide'),
guide = guide_none()) +
scale_y_continuous(limits=c(0, 2.20)) +
scale_x_discrete(limits = c('WW', 'LL', 'WL', 'LW')) +
labs(title="Slopes per condition", y='Slopes', x='Condition')+
# WW- LW
annotate("text", x = 2.5, y = 2.18,  label = "***", size = 4) +
annotate("segment", x = 0.7, xend = 4.2, y = 2.16,
yend = 2.16, colour = "black", size=.2, alpha=1,) +
# LL - LW
annotate("text", x = 3, y = 2.08,  label = "***", size = 4) +
annotate("segment", x = 1.75, xend = 4.2, y = 2.06,
yend = 2.06, colour = "black", size=.2, alpha=1,) +
# WW- WL
annotate("text", x = 1.9, y = 1.98,  label = "***", size = 4) +
annotate("segment", x = 0.7, xend = 3.2, y = 1.96,
yend = 1.96, colour = "black", size=.2, alpha=1,) +
# LL - WL
annotate("text", x = 2.5, y = 1.88,  label = "***", size = 4) +
annotate("segment", x = 1.75, xend = 3.2, y = 1.86,
yend = 1.86, colour = "black", size=.2, alpha=1,) +
#WW - LL
annotate("text", x = 1.45, y = 1.78,  label = "***", size = 4) +
annotate("segment", x = 0.7, xend = 2.2, y = 1.76,
yend = 1.76, colour = "black", size=.2, alpha=1,) +
theme(axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9),
plot.title = element_text(size = 10, hjust = 0.5))
plt_1k_slope
ggplot(data_clean %>% filter(nsub < 15), aes(x=dist_log, y=resp_log, color=condicion)) +
scale_color_manual(values = cols, labels = c('Wide', 'Low', 'Wide-Low', 'Low-Wide')) +
geom_smooth(method = lm, se = FALSE, size=0.5) +
facet_wrap(~nsub) +
theme(axis.title.x = element_blank(),
axis.title.y = element_text(size = 9),
plot.title = element_text(size = 10, hjust = 0.5)) +
theme_minimal()
ggplot(data_clean %>% filter(nsub > 15 & nsub < 31), aes(x=dist_log, y=resp_log, color=condicion)) +
scale_color_manual(values = cols, labels = c('Wide', 'Low', 'Wide-Low', 'Low-Wide')) +
geom_smooth(method = lm, se = FALSE, size=0.5) +
facet_wrap(~nsub) +
theme(axis.title.x = element_blank(),
axis.title.y = element_text(size = 9),
plot.title = element_text(size = 10, hjust = 0.5)) +
theme_minimal()
ggplot(data_clean %>% filter(nsub > 31 & nsub < 44), aes(x=dist_log, y=resp_log, color=condicion)) +
scale_color_manual(values = cols, labels = c('Wide', 'Low', 'Wide-Low', 'Low-Wide')) +
geom_smooth(method = lm, se = FALSE, size=0.5) +
facet_wrap(~nsub) +
theme(axis.title.x = element_blank(),
axis.title.y = element_text(size = 9),
plot.title = element_text(size = 10, hjust = 0.5)) +
theme_minimal()
ggplot(data_clean %>% filter(nsub > 44 & nsub < 59), aes(x=dist_log, y=resp_log, color=condicion)) +
scale_color_manual(values = cols, labels = c('Wide', 'Low', 'Wide-Low', 'Low-Wide')) +
geom_smooth(method = lm, se = FALSE, size=0.5) +
facet_wrap(~nsub) +
theme(axis.title.x = element_blank(),
axis.title.y = element_text(size = 9),
plot.title = element_text(size = 10, hjust = 0.5)) +
theme_minimal()
ggplot(data_clean %>% filter(nsub > 59 & nsub < 70), aes(x=dist_log, y=resp_log, color=condicion)) +
scale_color_manual(values = cols, labels = c('Wide', 'Low', 'Wide-Low', 'Low-Wide')) +
geom_smooth(method = lm, se = FALSE, size=0.5) +
facet_wrap(~nsub) +
theme(axis.title.x = element_blank(),
axis.title.y = element_text(size = 9),
plot.title = element_text(size = 10, hjust = 0.5)) +
theme_minimal()
data_prom <- data_clean %>%
group_by(condicion, dist_log) %>%
summarise(dist_log,
resp_log,
prom_log = mean(resp_log),
sd_log = sd(resp_log),
std_log = std.error(resp_log))
ggplot(data_prom,
aes(x=dist_log, y=prom_log,
color = condicion)) +
geom_point() +
geom_line(linewidth = 0.8) +
scale_color_manual(values = cols,
limits = c('WW', 'LL', 'WL', 'LW'),
labels = c('Wide', 'Low', 'Wide-Low', 'Low-Wide')) +
geom_errorbar(aes(ymin=prom_log-std_log,
ymax=prom_log+std_log),
width = 0.02) +
# facet_grid(rows = vars(ID)) +
labs(title = "Average responses", x='Distance (log scale)', y='responses (log scale)') +
theme(axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9),
plot.title = element_text(size = 10, hjust = 0.5))
lmer.1k <- lmer(slope ~ condicion + (1|nsub),
data = data_slopes_clean)
summary(lmer.1k)
anova(lmer.1k)
##partial eta sq
effectsize::eta_squared(lmer.1k, partial = TRUE)
#Rsq
r.squaredGLMM(lmer.1k)
emmeans(lmer.1k,
list(pairwise ~ condicion),
adjust="bonferroni")
qqnorm(resid(lmer.1k))
#### Carga de Datos ####
# Coeficientes Completos
Dato_1 <- read_csv('./Indicadores/Centroide_Espectral.csv') %>%
pivot_longer(cols = c("wide", "low", "low-wide", "wide-low"),
names_to = "Condicion",
values_to = 'Centroide_Espectral')
Dato_2 <- read_csv('./Indicadores/DR_Ratio.csv')%>%
pivot_longer(cols = c("wide", "low", "low-wide", "wide-low"),
names_to = "Condicion",
values_to = 'DR_Ratio')
Dato_3 <- read_csv('./Indicadores/Intensidad_Binaural.csv') %>%
pivot_longer(cols = c("wide", "low", "low-wide", "wide-low"),
names_to = "Condicion",
values_to = 'Intensidad_Binaural')
Dato_4 <- read_csv('./Indicadores/Varianza_Espectral.csv') %>%
pivot_longer(cols = c("wide", "low", "low-wide", "wide-low"),
names_to = "Condicion",
values_to = 'Varianza_Espectral')
df_list <- list(Dato_1, Dato_2, Dato_3, Dato_4)
Indicadores <- df_list %>% reduce(merge, by=c('Distancia','Condicion'))
rm(Dato_1, Dato_2, Dato_3, Dato_4, df_list)
Indicadores$dist_log <- log10(Indicadores$Distancia)
# Igualo nombres de columna
Indicadores <- rename(Indicadores,
distancia = Distancia,
condicion = Condicion)
Indicadores$condicion[Indicadores$condicion=="wide"] <- "WW"
Indicadores$condicion[Indicadores$condicion=="low"] <- "LL"
Indicadores$condicion[Indicadores$condicion=="low-wide"] <- "LW"
Indicadores$condicion[Indicadores$condicion=="wide-low"] <- "WL"
data_e_indicadores <- merge(x=Indicadores,y=data_clean,
by=c("condicion","distancia","dist_log"))
View(data_e_indicadores)
lmer.indicadores <- lmer(resp_log ~ dist_log * condicion *
Centroide_Espectral * DR_Ratio *
Intensidad_Binaural * Varianza_Espectral
+ (1|nsub),
data = data_e_indicadores)
lmer.indicadores <- lmer(resp_log ~ dist_log * condicion *
Centroide_Espectral + (1|nsub),
data = data_e_indicadores)
summary(lmer.indicadores)
anova(lmer.indicadores)
lmer.indicadores <- lmer(resp_log ~ dist_log * condicion *
DR_Ratio + (1|nsub),
data = data_e_indicadores)
summary(lmer.indicadores)
anova(lmer.indicadores)
lmer.indicadores <- lmer(resp_log ~ dist_log * condicion *
Intensidad_Binaural + (1|nsub),
data = data_e_indicadores)
anova(lmer.indicadores)
lmer.indicadores <- lmer(resp_log ~ dist_log * condicion *
Varianza_Espectral + (1|nsub),
data = data_e_indicadores)
summary(lmer.indicadores)
anova(lmer.indicadores)
lmer.indicadores <- lmer(resp_log ~ dist_log * condicion +
Varianza_Espectral + (1|nsub),
data = data_e_indicadores)
summary(lmer.indicadores)
anova(lmer.indicadores)
lmer.indicadores <- lmer(resp_log ~ dist_log * condicion +
Centroide_Espectral + (1|nsub),
data = data_e_indicadores)
summary(lmer.indicadores)
anova(lmer.indicadores)
lmer.indicadores <- lmer(resp_log ~ dist_log * condicion +
DR_Ratio + (1|nsub),
data = data_e_indicadores)
summary(lmer.indicadores)
anova(lmer.indicadores)
lmer.indicadores <- lmer(resp_log ~ dist_log * condicion +
Intensidad_Binaural + (1|nsub),
data = data_e_indicadores)
summary(lmer.indicadores)
anova(lmer.indicadores)
lmer.indicadores <- lmer(resp_log ~ dist_log * condicion +
(Intensidad_Binaural:condicion) + (1|nsub),
data = data_e_indicadores)
summary(lmer.indicadores)
anova(lmer.indicadores)
emmeans(lmer.indicadores,
list(pairwise ~ condicion),
adjust="bonferroni")
lmer.indicadores <- lmer(resp_log ~ dist_log * condicion +
(Centroide_Espectral:condicion) + (1|nsub),
data = data_e_indicadores)
summary(lmer.indicadores)
anova(lmer.indicadores)
##partial eta sq
#effectsize::eta_squared(lmer.indicadores, partial = TRUE)
#Rsq
#r.squaredGLMM(lmer.indicadores)
emmeans(lmer.indicadores,
list(pairwise ~ Centroide_Espectral:condicion),
adjust="bonferroni")
qqnorm(resid(lmer.indicadores))
##partial eta sq
#effectsize::eta_squared(lmer.indicadores, partial = TRUE)
#Rsq
#r.squaredGLMM(lmer.indicadores)
emmeans(lmer.indicadores,
list(pairwise ~ Centroide_Espectral+condicion),
adjust="bonferroni")
qqnorm(resid(lmer.indicadores))
##partial eta sq
#effectsize::eta_squared(lmer.indicadores, partial = TRUE)
#Rsq
#r.squaredGLMM(lmer.indicadores)
emmeans(lmer.indicadores,
list(pairwise ~ condicion),
adjust="bonferroni")
qqnorm(resid(lmer.indicadores))
lmer.indicadores <- lmer(resp_log ~ dist_log * condicion +
(DR_Ratio:condicion) + (1|nsub),
data = data_e_indicadores)
summary(lmer.indicadores)
anova(lmer.indicadores)
##partial eta sq
#effectsize::eta_squared(lmer.indicadores, partial = TRUE)
#Rsq
#r.squaredGLMM(lmer.indicadores)
emmeans(lmer.indicadores,
list(pairwise ~ condicion),
adjust="bonferroni")
qqnorm(resid(lmer.indicadores))
lmer.indicadores <- lmer(resp_log ~ dist_log * condicion +
(Intensidad_Binaural:condicion) + (1|nsub),
data = data_e_indicadores)
summary(lmer.indicadores)
anova(lmer.indicadores)
##partial eta sq
#effectsize::eta_squared(lmer.indicadores, partial = TRUE)
#Rsq
#r.squaredGLMM(lmer.indicadores)
emmeans(lmer.indicadores,
list(pairwise ~ condicion),
adjust="bonferroni")
qqnorm(resid(lmer.indicadores))
lmer.indicadores <- lmer(resp_log ~ dist_log * condicion +
(Varianza_Espectral:condicion) + (1|nsub),
data = data_e_indicadores)
summary(lmer.indicadores)
anova(lmer.indicadores)
##partial eta sq
#effectsize::eta_squared(lmer.indicadores, partial = TRUE)
#Rsq
#r.squaredGLMM(lmer.indicadores)
emmeans(lmer.indicadores,
list(pairwise ~ condicion),
adjust="bonferroni")
qqnorm(resid(lmer.indicadores))
